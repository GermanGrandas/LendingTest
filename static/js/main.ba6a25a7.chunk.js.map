{"version":3,"sources":["components/Header.js","components/Layout.js","components/investorsDetails.js","components/ProductDetail.js","components/ProductsList.js","components/MainComponent.js","App.js","index.js"],"names":["MenuItems","children","to","style","color","marginRight","marginTop","Menu","Item","justifyContent","margin","HeaderComponent","Segment","inverted","textAlign","secondary","attached","stackable","aling","Grid","width","Row","columns","centered","verticalAlign","Column","position","alt","src","height","Header","as","content","Icon","name","Content","size","Layout","year","Date","getFullYear","Helmet","charSet","rel","href","vertical","padding","boxShadow","ItemDetail","investor","setEdit","investorId","useRef","id","investor_name","purchased","sold","sold_str","className","maxWidth","data","value","totalValue","lineWidth","background","label","dataEntry","labelStyle","fontSize","fontFamily","fill","labelPosition","Button","icon","circular","onClick","basic","EditView","investors","investor_info","finishEdit","left_amount","numeric_amount","parseFloat","useState","formData","setFormData","error","setError","Form","onSubmit","e","preventDefault","test","axios","put","then","catch","err","console","success","Select","fluid","options","onChange","placeholder","Input","target","type","InvestorsDetails","selectedInvestor","setSelectedInvestor","setEditView","setSetEditView","investors_names","map","key","text","investor_id","current","seleted_inv","filter","Group","log","ProductDetail","product","information","setInformation","useEffect","post","product_id","overflowY","maxHeight","minHeight","Progress","percent","floated","getInvestor","amount","selected","date","productId","itemRef","setRef","new_date","month","getMonth","day","getDate","string_date","amount_str","onMouseOver","onMouseOut","ProductsList","products","MainComponent","currentProduct","setCurrentProduct","user_id","doubling","stretched","marginLeft","borderRadius","border","App","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba6a25a7.chunk.js","sourcesContent":["import { Segment, Menu,Header, Icon,Grid } from \"semantic-ui-react\";\nimport React from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst MenuItems = ({ children, to }) => {\n  \n    return (\n      <Link to={to}\n        style={{ color: 'white', marginRight: 15, marginTop: 15 }} >\n        <Menu.Item style={{justifyContent: \"center\", margin:\"0.5em 0\"}} >\n          {children}\n        </Menu.Item>\n      </Link>\n    )\n  };\n\nexport const HeaderComponent = () => {\n    return (\n        <header>\n            <Segment\n                inverted\n                // vertical\n                // style={{  backgroundColor: \"#066732\" }}\n                textAlign='center'\n            >   \n                <Menu\n                    secondary\n                    inverted\n                    attached=\"top\"\n                    //style={{ display: \"flex\", height: \"15px\", backgroundColor: \"#066732\" }}\n                    stackable\n                    aling=\"left\"\n                >\n                    <Grid style={{width : \"100%\"}}>\n                        <Grid.Row columns={3}  centered verticalAlign=\"middle\">\n                            <Grid.Column width={6}>\n                                <Menu.Menu position='left'>\n                                    <img  alt='quantic-logo' src=\"https://lendingfront.com/wp-content/uploads/2019/12/white_logo.svg\"  width={150} height={50} style={{margin:\"0.5em 0.4em\"}}/>\n                                    <MenuItems to='/'><Header as=\"h4\" content=\"APPLICATION\" inverted/></MenuItems>\n                                    <MenuItems to='/'>\n                                        <Header as=\"h4\" inverted>\n                                            <Icon name='search'/>\n                                            <Header.Content>SEARCH</Header.Content>\n                                        </Header>\n                                    </MenuItems>  \n                                </Menu.Menu>\n                            </Grid.Column>\n                            <Grid.Column width={4}>\n                                <Header as=\"h1\" content=\"QA\" inverted textAlign='center'  />\n                            </Grid.Column>\n                            <Grid.Column width={6}>\n                                <Menu.Menu position=\"right\">\n                            \n                                    <MenuItems to='/'><Header as=\"h4\" content=\"DASHBOARD\" inverted/></MenuItems>\n                                    <MenuItems to='/'>\n                                        <Header as='h4' inverted>\n                                            <Icon name='address book' size='small' />\n                                            <Header.Content>USER ADMIN</Header.Content>\n                                        </Header>\n                                    </MenuItems>\n                                    <MenuItems to='/'>\n                                    <Header as='h4' inverted>\n                                        <Icon name='user circle' size='small' />\n                                        <Header.Content>USER ADMIN</Header.Content>\n                                    </Header>\n                                    </MenuItems>\n                                </Menu.Menu>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid> \n                    \n                </Menu>\n            </Segment>\n        </header>\n    )\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { Header, Segment } from 'semantic-ui-react'\nimport { HeaderComponent } from './Header'\n\nexport const Layout = ({children}) => {\n    const year = new Date().getFullYear() || '2021'\n    return (\n        <>\n          <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>LendingTest</title>\n            <link rel=\"canonical\" href=\"https://germangrandas.github.io/LendingTest/\" />\n          </Helmet>\n         <HeaderComponent/>\n         <main>{children}</main>\n         <footer >\n             \n         <Segment\n          vertical\n          \n          //color=\"black\"\n          size='mini'\n          textAlign='center'\n          style={{\n            padding: \"4em 0em\",\n            boxShadow: \"-8px 15px 30px rgba(133,141,148,.66)\",\n            // backgroundColor: \"#000\",\n            //border: \"1px solid black\",\n          }}\n        >\n            <Header as=\"h3\" content={`©LendingFront${year}`}/>\n        </Segment>\n         </footer>\n        </>\n    )\n}\n","import React,{useRef,useState} from 'react'\nimport { Item,Grid,Header, Button, Form } from 'semantic-ui-react'\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport axios from 'axios';\n\n\n\nconst ItemDetail = ({investor,setEdit}) =>{ \n    const investorId = useRef(investor.id);\n    const {investor_name,purchased,sold} = investor\n    const sold_str = `$${sold}`\n    return (\n        <Item className=\"ui inverted segment simple_border\" style={{margin : \"0 0\"}}>\n            <Item.Content>\n            <Item.Header style={{width : \"100%\"}}>\n                <Grid verticalAlign=\"middle\" style={{maxWidth: \"100%\",margin: \"0\", padding:\"1.4em\"}}>\n                    <Grid.Row columns={4} textAlign=\"center\" style={{padding:\"0.1em\"}}>\n                        <Grid.Column width={5}><Header as=\"h5\" content={investor_name}/></Grid.Column>\n                        <Grid.Column width={4}> <Header as=\"h5\" content={sold_str}/></Grid.Column>\n                        <Grid.Column width={4}>\n                            <PieChart\n                                data={[{ value: purchased, color: \"#16c4c4\" }]}\n                                style={{ height: \"60px\" }}\n                                totalValue={100}\n                                lineWidth={10}\n                                background=\"#969696\"\n                                label={({ dataEntry }) => dataEntry.value}\n                                labelStyle={{\n                                    fontSize: \"25px\",\n                                    fontFamily: \"sans-serif\",\n                                    fill: \"#969696\",\n                                }}\n                                labelPosition={0}\n                            />\n    \n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            \n                            <Button icon=\"pencil\" color=\"teal\" circular size=\"tiny\" onClick={() => setEdit(investorId)}/>    \n                            <Button icon=\"cancel\" circular  color=\"teal\" size=\"tiny\" basic/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Item.Header>\n        </Item.Content>\n        </Item>\n    )\n}\n\nconst EditView = ({investors, investor_info, finishEdit}) =>{\n    const {investor_name,left_amount,id} = investor_info\n    const numeric_amount = parseFloat(left_amount)\n\n    const [formData, setFormData] = useState({id : id, investor: \"\", sold: left_amount });\n\n    const [error, setError] = useState(false)\n    let { investor , sold} = formData\n    const changeForm = ({ target }) => {\n        setFormData({\n          ...formData,\n          [target.name]: target.value,\n        });\n      };\n    const handleSelect = (e, { value }) => setFormData({\n        ...formData,\n        \"investor\": value,\n      });;\n    const handleSubmit = e =>{\n        e.preventDefault()\n        const numerical_pattern = /^[+-]?\\d+(\\.\\d+)?$/;\n        const isNumber  = numerical_pattern.test(sold);\n        if(isNumber && investor !== \"\"){\n            setError(false)\n            axios.put(\"https://demo7555831.mockable.io/edit_investor\",formData).then(\n                ({data}) => {\n                    \n                    finishEdit(formData)\n                }\n            ).catch(\n                err => {\n                    setError(true)\n                    console.error(err)\n                }\n            )\n            \n        }\n        else{\n            setError(true)\n        }\n    }\n    return(\n        <Item className=\"ui inverted segment simple_border\" style={{margin : \"0 0\"}}>\n            <Item.Content>\n                <Item.Header style={{width : \"100%\"}}>\n                    <Form onSubmit={handleSubmit} success>\n                    <Grid verticalAlign=\"middle\" style={{maxWidth: \"100%\",margin: \"0\", padding:\"1.4em\"}}>\n                        \n                            <Grid.Row columns={4} textAlign=\"center\" style={{padding:\"0.1em\"}}>\n                                <Grid.Column width={6}>\n                                    <Form.Select  fluid\n                                        label='Select investor'\n                                        options={investors}\n                                        onChange={handleSelect}\n                                        name=\"investor\"\n                                        error={error}\n                                        placeholder={investor_name}/>\n                                </Grid.Column>\n                                <Grid.Column width={4}>\n                                    <Form.Input \n                                        fluid label='Amount to sell' \n                                        name=\"sold\" placeholder={numeric_amount} \n                                        onChange={changeForm} value={sold}\n                                        error={error}\n                                    />\n                                </Grid.Column>\n                                <Grid.Column width={4}>\n                                    <Button icon=\"save\" color=\"teal\" circular size=\"tiny\" type=\"submit\"/>    \n                                    <Button icon=\"cancel\" circular  color=\"teal\" size=\"tiny\" basic/>\n                                </Grid.Column>\n                            </Grid.Row>\n                        \n                        </Grid>\n                    </Form>\n                </Item.Header>\n            </Item.Content>\n        </Item>\n    )\n}\nexport const InvestorsDetails = ({investors}) => {\n    const [selectedInvestor, setSelectedInvestor] = useState({})\n    const [setEditView, setSetEditView] = useState(false)\n    const investors_names = investors.map(({investor_name} )=> ({\n        key:investor_name,\n        value: investor_name,\n        text: investor_name,\n      }))\n    const setEdit = ({current : investor_id }) =>{\n        const seleted_inv = investors.filter(({id}) => id === investor_id)[0]\n        setSelectedInvestor(seleted_inv)\n        setSetEditView(true)\n    }\n\n    const finishEdit = investor =>{\n        console.log(investor);\n        setSetEditView(false)\n    }\n    return (\n        <Item.Group>\n            {\n                !setEditView ?\n                    investors.map(investor => {\n                    return (<ItemDetail key={investor.id} investor={investor} setEdit={setEdit}/>)}) :\n                <EditView investors={investors_names} investor_info={selectedInvestor} finishEdit={finishEdit}/>\n            }\n        </Item.Group>\n    )\n}\n\nexport {EditView}","import React, {useState,useEffect} from 'react'\nimport { Grid, Header, Progress } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { InvestorsDetails } from './investorsDetails';\n\nconst ProductDetail = ({product}) => {\n    const [information, setInformation] = useState([])\n    useEffect(() => {\n        axios.post(\n            \"https://demo7555831.mockable.io/get_investors_by_id\",{product_id : product}\n        ).then(\n            ({data}) => {\n                let {information} = data\n                setInformation(information)\n            }\n        ).catch(console.error)\n    }, [product])\n    return (\n        <Grid columns={1}>\n            <Grid.Column>\n                <Grid.Row className=\"investors_space\">\n                    <Grid.Row style={{margin: \"0.3em 1em\",}}>\n                        <Header as=\"h4\" content={`Product ID ${product}`} \n                            inverted className=\"border_header\"/>\n                    </Grid.Row>\n                    <Grid.Row style={{marginTop: \"1.3em\"}} >\n                        <Grid verticalAlign=\"middle\">\n                            <Grid.Row columns={4} textAlign=\"center\">\n                                <Grid.Column width={5}><Header as=\"h5\" content=\"Investor Name\" inverted/></Grid.Column>\n                                <Grid.Column width={4}> <Header as=\"h5\" content=\"Sold\" inverted/></Grid.Column>\n                                <Grid.Column width={4}><Header as=\"h5\" content=\"% Purchased\" inverted/></Grid.Column>\n                                <Grid.Column width={3}></Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Grid.Row>\n                </Grid.Row>\n                <Grid.Row style={{overflowY : \"scroll\",maxHeight : \"43.5vh\", minHeight : \"43.5vh\"}}>\n                    <InvestorsDetails investors={information}/>\n                </Grid.Row>\n                <Grid.Row className=\"card_button teal_space\" verticalAlign=\"middle\" textAlign=\"center\">\n                    <Header as=\"h3\" style={{margin : \"0.4em  1.4em\"}}\n                        content=\"Remaining amount $850.000 of $8.300.800\" inverted/>\n                    <Progress percent={25} style={{margin : \"0.4em  1.4em\",}} color=\"blue\"\n                        size='tiny'/>\n                    <Grid.Row style={{margin : \"0.4em  1.4em\",}}>\n                        <Header as=\"h6\" content=\"0%\" floated='left' inverted/>\n                        <Header as=\"h6\" content=\"100%\" floated=\"right\" inverted/>\n                    </Grid.Row>\n                    \n                </Grid.Row>\n            </Grid.Column>\n            \n        </Grid>\n    )\n}\nexport default ProductDetail","import React, { useRef,useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { Grid, Header, Item } from 'semantic-ui-react'\n\nconst ItemDetail = ({product, getInvestor,selected}) =>{ \n    const {amount,date,product_id} = product\n\n    const productId = useRef(product_id);\n    const [itemRef, setRef] = useState(false);\n\n    const new_date = new Date(date);\n    const month = new_date.getMonth() + 1\n    const day = new_date.getDate();\n    const year = new_date.getFullYear();\n    const string_date = `${day}/${month}/${year}`\n    const amount_str = `$${amount}`\n\n    const enter = e=> {setRef(true)}\n    const leave = e => {setRef(false)}\n\n    return (\n        <Item className=\"ui inverted segment item_class\" style={{margin : \"0 0\",}} onMouseOver={enter} onMouseOut={leave} onClick={() => getInvestor(productId.current)}>\n            <Item.Content>\n            <Item.Header style={{width : \"100%\"}}>\n                <Grid verticalAlign=\"middle\" style={{maxWidth: \"100%\",margin: \"0\", padding:\"1.4em\"}}>\n                    <Grid.Row columns={2} style={{padding:\"0\"}}>\n                        <Grid.Column textAlign=\"left\" width={10}>\n                            <Grid.Row>\n                                <Header as=\"h6\" content=\"Product ID\" inverted={itemRef ? true : false}/>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Header as=\"h2\" content={product_id} inverted={itemRef ? true : false}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"right\" width={6}>\n                            <Grid.Row>\n                                <Header as=\"h5\" content=\"Advance\" color={itemRef ? \"black\" : \"teal\"} inverted={itemRef ? true : false}/>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Header as=\"h6\" content={string_date} inverted={itemRef ? true : false}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                    </Grid.Row>\n                    \n                    <Grid.Row columns={1} style={{padding:\"0\"}}>\n                        <Grid.Column>\n                            <Header as=\"h2\" content={amount_str} textAlign=\"right\" inverted={itemRef ? true : false}/>\n                        </Grid.Column>\n                        \n                    </Grid.Row>\n                </Grid>\n            </Item.Header>\n        </Item.Content>\n        </Item>\n    )\n}\n\nconst ProductsList = ({products,getInvestor,selected}) => {\n    \n    return (\n        <Item.Group>\n            {\n                products.map(product => {\n                return (<ItemDetail key={product.product_id} product={product} getInvestor={getInvestor} selected={selected}/>)\n            })\n            }\n        </Item.Group>\n    )\n}\nProductsList.propTypes = {\n    products : PropTypes.array.isRequired\n}\n\nexport default ProductsList;","import React, {useState,useEffect} from 'react'\nimport { Button, Grid,Header,Icon,Segment } from 'semantic-ui-react'\nimport axios from 'axios';\n\nimport ProductDetail from './ProductDetail';\nimport ProductsList from './ProductsList';\n\n// import { data_products } from \"../staticInfo\";\n\nexport const MainComponent = () => {\n    const [information, setInformation] = useState([])\n    const [currentProduct, setCurrentProduct] = useState(\"\")\n\n    useEffect(() => {\n        axios.post(\n            \"https://demo7555831.mockable.io/get_products_by_id\",{user_id : \"\"}\n        ).then(\n            ({data}) => {\n                let {information} = data\n                setInformation(information)\n            }\n        ).catch(console.error)\n    }, [])\n    \n    const getInvestor = productId =>{\n        setCurrentProduct(productId)\n    }\n    return (\n        <Segment attached=\"top\" style={{ padding : \"0 0\", height : \"100%\"}}>\n            <Grid columns={2} doubling stretched style={{margin : \"0 0\",marginLeft : \"0 !important\", height : \"100%\"}}>\n                <Grid.Column width={5} style={{ height : \"100%\",padding : \"0 0\"}}>\n                    <div className=\"ui left aligned card_header\">\n                        <Header as=\"h4\" content=\"Select a product to syndicate\" style={{margin : \"0.5em 2em\"}}/>\n                    </div>\n                    <div style={{overflowY : \"scroll\",minHeight : \"48vh\"}}>\n                        <ProductsList products={information} getInvestor={getInvestor} selected={currentProduct}/>\n                    </div>\n                    \n                    <Segment textAlign=\"center\" className=\"card_button\">\n                        <Grid columns={2}>\n                            <Grid.Column>\n                                <Button color='teal' size=\"medium\" style={{borderRadius : \"15px\", width : \"160px\"}}>\n                                    <Icon name=\"close\" /> Close\n                                </Button>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Button size='medium' \n                                    style={{ borderRadius : \"15px\", width : \"160px\", \n                                             background :\"white\" , color :\"teal\",\n                                             border : \"1px solid rgba(228, 228, 228,0.6)\"}}>\n                                    <Icon name=\"save\" /> Sell\n                                </Button>\n                            </Grid.Column>\n                        </Grid>\n                        \n                        \n                    </Segment>\n                    \n                </Grid.Column>\n                <Grid.Column width={11} style={{padding : \"0\"}}>\n                    <ProductDetail product={currentProduct}/>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n        \n    )\n}\n","import { Layout } from './components/Layout';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Button, Header } from 'semantic-ui-react';\nimport { MainComponent } from './components/MainComponent';\n\n\nfunction App() {\n  return (\n    <Layout className=\"App\">\n      <div style={{ maxHeight: \"80vh\"}}>\n        <div className='card_floated'>\n          <MainComponent/>\n        </div>\n        <Header as=\"h1\" inverted className=\"text_floated\">Advances for syndication</Header>\n        <Button circular icon=\"add\" color=\"orange\" className=\"button_floated\"/>\n        <div style={{backgroundColor : \"#00b5ad\",margin: \"0 0\", width : \"100%\", height : \"20vh\"}}>\n          \n        </div>\n        <div style={{margin: \"0 0\", width : \"100%\", height : \"70vh\"}} />\n\n        \n      </div>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}